version: '3'
services:

  #PHP Service
  app:
    build:
      context: .
      dockerfile: Dockerfile
    image: jose/laravel
    container_name: app
    restart: unless-stopped
    tty: true
    environment:
      SERVICE_NAME: app
      SERVICE_TAGS: dev
    working_dir: /var/www
    volumes:
      - ./laravelapp:/var/www
      - ./php/local.ini:/usr/local/etc/php/conf.d/local.ini
    networks:
      - app-network

  #Nginx Service
  webserver:
    image: nginx:alpine
    container_name: webserver
    restart: unless-stopped
    tty: true
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./laravelapp:/var/www
      - ./nginx/conf.d/:/etc/nginx/conf.d/
    networks:
      - app-network

  #MySQL Service
  # db:
  #   image: mysql:5.7.22
  #   container_name: db
  #   restart: unless-stopped
  #   tty: true
  #   ports:
  #     - "3306:3306"
  #   environment:
  #     MYSQL_DATABASE: laravel
  #     MYSQL_ROOT_PASSWORD: your_mysql_root_password
  #     SERVICE_TAGS: dev
  #     SERVICE_NAME: mysql
  #   volumes:
  #     - dbdata:/var/lib/mysql/
  #     - ./mysql/my.cnf:/etc/mysql/my.cnf
  #   networks:
  #     - app-network

#Docker Networks
networks:
  app-network:
    driver: bridge
#Volumes
# volumes:
#   dbdata:
#     driver: local

#docker-compose up -d
#docker-compose down //Elimina todo los contenedores
#docker-compose exec app php artisan key:generate
#docker-compose exec app php artisan config:cache
#docker-compose stop
#docker rm -f ID
#docker run --name some-mysql -e MYSQL_ROOT_PASSWORD=12345678 -p 3306:3306 -d mysql